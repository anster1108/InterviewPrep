Traversing an Array : This loop runs from the first index (0) to the last index (n - 1).

Declaring and Traversing an Array
    // Defining an array
    int[] arr = {4, 2, 3};

    // Traversing the array
    for(int i = 0; i < arr.length; i++) {
        System.out.println(arr[i]);
    }

    Output : 4 2 3

Accessing Array Elements : arr[0]

Memory Storage and Structure : Arrays are stored in memory in a contiguous manner, meaning that all elements of the array occupy consecutive memory locations. This contiguous storage is crucial as it allows for efficient access and manipulation of the array elements.

    Given that arrays are of a fixed size, the memory allocated for an array is determined at the time of its creation. The size of the array cannot be altered during runtime, making arrays a static data structure.

Two-Dimensional Arrays : 

    // Declaring and initializing a 2D array
    int[][] arr = {
        {1, 2, 3},
        {4, 5, 6}
    };

    // Traversing the 2D array
    for(int i = 0; i < arr.length; i++) {
        for(int j = 0; j < arr[i].length; j++) {
            System.out.print(arr[i][j] + " ");
        }
        System.out.println();
    }


    Output : 1 2 3
             4 5 6







